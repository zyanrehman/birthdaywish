document.addEventListener("CONTENT_SCRIPT_STORY_INCOMING_EVENT", function(e) {
    if ("start-story" === e.detail.action) {
        var t = document.querySelectorAll("video");
        if (t.length) {
            for (var r = document.querySelector("a[role=link][tabindex='0'][href*='https://www.facebook']>img").alt, n = null, a = t.length - 1; 0 <= a; a--)
                if (0 !== t[a].offsetHeight) {
                    for (var l = "", i = Object.keys(t[a]), p = 0; p < i.length; p++)
                        if (-1 != i[p].indexOf("__reactFiber")) {
                            l = i[p].split("__reactFiber")[1];
                            break
                        }
                    try {
                        n = t[a].parentElement.parentElement.parentElement.parentElement["__reactProps" + l].children[0].props.children.props.implementations[1].data.hdSrc
                    } catch (e) {}
                    if (null == n)
                        try {
                            n = t[a].parentElement.parentElement.parentElement.parentElement["__reactProps" + l].children[0].props.children.props.implementations[1].data.sdSrc
                        } catch (e) {}
                    if (null == n)
                        try {
                            n = t[a].parentElement.parentElement.parentElement.parentElement["__reactProps" + l].children.props.children.props.implementations[1].data.hdSrc
                        } catch (e) {}
                    if (null == n)
                        try {
                            n = t[a].parentElement.parentElement.parentElement.parentElement["__reactProps" + l].children.props.children.props.implementations[1].data.sdSrc
                        } catch (e) {}
                    if (null == n)
                        try {
                            n = t[a]["__reactFiber" + l].return.stateNode.props.videoData.$1.hd_src
                        } catch (e) {}
                    if (null == n)
                        try {
                            n = t[a]["__reactFiber" + l].return.stateNode.props.videoData.$1.sd_src
                        } catch (e) {}
                    if (null != n) {
                        var c = t[a].parentElement.closest("div[data-id]").dataset.id;
                        break
                    }
                }
            n && document.dispatchEvent(new CustomEvent("CONTENT_SCRIPT_STORY_OUTGOING_EVENT",{
                detail: {
                    action: "finish-story",
                    data: {
                        video_id: c,
                        title: r,
                        type: "video",
                        url: n
                    }
                }
            }))
        }
    }
}),
document.addEventListener("CONTENT_SCRIPT_REEL_INCOMING_EVENT", function(e) {
    if ("start-reel" === e.detail.action) {
        var t = document.querySelectorAll("video");
        if (t.length) {
            for (var r = document.querySelector("h2 span.om3e55n1 a").innerText, n = document.querySelector("div.g4qalytl>span.mqmf5637").innerText, a = null, l = t.length - 1; 0 <= l; l--)
                if (0 !== t[l].offsetHeight) {
                    for (var i = "", p = Object.keys(t[l]), c = 0; c < p.length; c++)
                        if (-1 != p[c].indexOf("__reactFiber")) {
                            i = p[c].split("__reactFiber")[1];
                            break
                        }
                    try {
                        a = t[l].parentElement.parentElement.parentElement.parentElement["__reactProps" + i].children[0].props.children.props.implementations[1].data.hdSrc
                    } catch (e) {}
                    if (null == a)
                        try {
                            a = t[l].parentElement.parentElement.parentElement.parentElement["__reactProps" + i].children[0].props.children.props.implementations[1].data.sdSrc
                        } catch (e) {}
                    if (null == a)
                        try {
                            a = t[l].parentElement.parentElement.parentElement.parentElement["__reactProps" + i].children.props.children.props.implementations[1].data.hdSrc
                        } catch (e) {}
                    if (null == a)
                        try {
                            a = t[l].parentElement.parentElement.parentElement.parentElement["__reactProps" + i].children.props.children.props.implementations[1].data.sdSrc
                        } catch (e) {}
                    if (null == a)
                        try {
                            a = t[l]["__reactFiber" + i].return.stateNode.props.videoData.$1.hd_src
                        } catch (e) {}
                    if (null == a)
                        try {
                            a = t[l]["__reactFiber" + i].return.stateNode.props.videoData.$1.sd_src
                        } catch (e) {}
                    if (null != a) {
                        var d = t[l].parentElement.closest("div[data-video-id]").dataset.videoId;
                        break
                    }
                }
            a && document.dispatchEvent(new CustomEvent("CONTENT_SCRIPT_REEL_OUTGOING_EVENT",{
                detail: {
                    action: "finish-story",
                    data: {
                        video_id: d,
                        title: r + " - " + n,
                        type: "video",
                        url: a
                    }
                }
            }))
        }
    }
});
